name: CI for FlutterCommerce

on:
  push:
    branches: [ develop, docker ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker buildx build --output type=oci,dest=image.tar --platform linux/amd64,linux/arm64 -t fluttercommerce:latest .

      - name: Save Docker image artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: image.tar

  infrastructure_testing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Environment Variables
      run: |
        echo "Setting up environment variables"
        # export ENV_VAR_NAME=value
        # echo "::set-env name=ENV_VAR_NAME::value"

    - name: Cache Goss
      uses: actions/cache@v2
      with:
        path: ~/.goss
        key: ${{ runner.os }}-goss-${{ hashFiles('**/goss.yaml') }}
        restore-keys: |
          ${{ runner.os }}-goss-

    - name: Install Goss
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Installing Goss"
        curl -fsSL https://goss.rocks/install | sh

    - name: Provision Infrastructure
      run: |
        echo "Provisioning infrastructure"
        # Commands to provision infrastructure (e.g., Terraform, CloudFormation)

    - name: Run Goss Tests
      run: |
        echo "Running Goss tests"
        goss validate

    - name: Collect Test Reports
      run: |
        echo "Collecting test reports"
        mkdir -p test-reports
        cp goss-outputs.json test-reports/

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: infrastructure-test-results
        path: test-reports
