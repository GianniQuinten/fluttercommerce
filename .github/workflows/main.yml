name: CI for FlutterCommerce

on:
  push:
    branches: [ develop, docker ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t fluttercommerce:latest .

  unittesting:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '3.4.1'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test

  prepare_release:
    runs-on: ubuntu-latest
    needs: unittesting
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version and create changelog
        run: |
          # Commands to bump version and create a changelog
          # This can be customized based on your release process
          echo "Prepare release steps go here"

  infrastructure_testing:
    runs-on: ubuntu-latest
    needs: prepare_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run infrastructure tests
        run: |
          # Commands to test your infrastructure
          echo "Infrastructure testing steps go here"

  push_dockerhub:
    runs-on: ubuntu-latest
    needs: infrastructure_testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          docker tag fluttercommerce:latest ${{ secrets.DOCKER_USERNAME }}/fluttercommerce:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fluttercommerce:latest
