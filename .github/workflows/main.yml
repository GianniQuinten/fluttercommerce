name: CI for FlutterCommerce

on:
  push:
    branches: [ develop, docker ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  unittesting:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1' # Ensure this matches your pubspec.yaml version

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Unit Tests
        run: flutter test

  prepare_release:
    runs-on: ubuntu-latest
    needs: unittesting
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version and create changelog
        run: |
          # Commands to bump version and create a changelog
          # This can be customized based on your release process
          echo "Prepare release steps go here"

  infrastructure_testing:
    runs-on: ubuntu-latest
    needs: prepare_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run infrastructure tests
        run: |
          # Commands to test your infrastructure
          echo "Infrastructure testing steps go here"


  push_dockerhub:
    runs-on: ubuntu-latest
    needs: infrastructure_testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Debug DockerHub Tag
        run: echo "DockerHub Tag: ${{ secrets.DOCKER_USERNAME }}/fluttercommerce:latest"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/fluttercommerce:latest

  security_testing:
    runs-on: ubuntu-latest
    needs: push_dockerhub
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Scout
        run: curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh

      - name: Run Docker Scout analysis
        run: docker scout quickview --image ${{ secrets.DOCKER_USERNAME }}/fluttercommerce:latest

