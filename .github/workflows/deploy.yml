name: Deploy

#on:
#  workflow_run:
#    workflows: ["CI for FlutterCommerce"]
#    types:
#      - completed

on:
  push:
    branches: [ develop, docker, main ]


jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Minikube
        uses: manusa/actions-setup-minikube@v2.4.1
        with:
          'minikube version': 'v1.30.0'
          'kubernetes version': 'latest'
          'driver': 'docker'

      - name: Wait for Minikube to start
        run: |
          until kubectl get nodes; do sleep 1; done

      - name: Verify Minikube status
        run: kubectl get nodes

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl to use Minikube context
        run: |
          kubectl config use-context minikube

      - name: Deploy application
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

      - name: Wait for application to be ready
        run: |
          kubectl rollout status deployment/fluttercommerce

      - name: Describe deployment for debugging
        if: failure()
        run: |
          kubectl describe deployment fluttercommerce

      - name: Get pod details
        if: failure()
        run: |
          kubectl get pods -l app=fluttercommerce -o jsonpath="{.items[*].metadata.name}"

      - name: Get pod logs
        if: failure()
        run: |
          for pod in $(kubectl get pods -l app=fluttercommerce -o jsonpath="{.items[*].metadata.name}"); do kubectl logs $pod; done

      - name: Run cluster tests
        run: |
          # Replace with your actual test command
          kubectl exec -it $(kubectl get pod -l app=fluttercommerce -o jsonpath="{.items[0].metadata.name}") -- ./run-tests.sh

      - name: Cleanup
        run: |
          kubectl delete -f kubernetes/deployment.yaml
          kubectl delete -f kubernetes/service.yaml
